/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off usart_scheduler -c usart_scheduler --vector_source="P:/chip_design/apple_chipset_modular/usart_scheduler/Waveform.vwf" --testbench_file="P:/chip_design/apple_chipset_modular/usart_scheduler/simulation/qsim/Waveform.vwf.vht"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off usart_scheduler -c usart_scheduler --vector_source="P:/chip_design/apple_chipset_modular/usart_scheduler/Waveform.vwf" --testbench_file="P:/chip_design/apple_chipset_modular/usart_scheduler/simulation/qsim/Waveform.vwf.vht"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory="P:/chip_design/apple_chipset_modular/usart_scheduler/simulation/qsim/" usart_scheduler -c usart_scheduler</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=vhdl --output_directory="P:/chip_design/apple_chipset_modular/usart_scheduler/simulation/qsim/" usart_scheduler -c usart_scheduler</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vcom -work work usart_scheduler.vho
vcom -work work Waveform.vwf.vht
vsim -c -t 1ps -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.usart_scheduler_vhd_vec_tst
vcd file -direction usart_scheduler.msim.vcd
vcd add -internal usart_scheduler_vhd_vec_tst/*
vcd add -internal usart_scheduler_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f



</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vcom -work work usart_scheduler.vho
vcom -work work Waveform.vwf.vht
vsim -c -t 1ps -sdfmax usart_scheduler_vhd_vec_tst/i1=usart_scheduler_vhd.sdo -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.usart_scheduler_vhd_vec_tst
vcd file -direction usart_scheduler.msim.vcd
vcd add -internal usart_scheduler_vhd_vec_tst/*
vcd add -internal usart_scheduler_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f



</modelsim_script_timing>
<hdl_lang>vhdl</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 50000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("baudrate")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("baudrate[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("baudrate[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "baudrate";
}

SIGNAL("master_clk_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("mem_addr_o")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 26;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("mem_addr_o[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_addr_o[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_addr_o";
}

SIGNAL("mem_data_rd_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("mem_data_rd_i[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "mem_data_rd_i";
}

SIGNAL("mem_data_rd_i[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "mem_data_rd_i";
}

SIGNAL("mem_data_rd_i[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "mem_data_rd_i";
}

SIGNAL("mem_data_rd_i[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "mem_data_rd_i";
}

SIGNAL("mem_data_rd_i[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "mem_data_rd_i";
}

SIGNAL("mem_data_rd_i[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "mem_data_rd_i";
}

SIGNAL("mem_data_rd_i[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "mem_data_rd_i";
}

SIGNAL("mem_data_rd_i[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "mem_data_rd_i";
}

SIGNAL("mem_data_wr_o")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("mem_data_wr_o[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_data_wr_o";
}

SIGNAL("mem_data_wr_o[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_data_wr_o";
}

SIGNAL("mem_data_wr_o[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_data_wr_o";
}

SIGNAL("mem_data_wr_o[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_data_wr_o";
}

SIGNAL("mem_data_wr_o[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_data_wr_o";
}

SIGNAL("mem_data_wr_o[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_data_wr_o";
}

SIGNAL("mem_data_wr_o[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_data_wr_o";
}

SIGNAL("mem_data_wr_o[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "mem_data_wr_o";
}

SIGNAL("mem_rw_done_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("mem_rw_req_o")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("mem_wr_en_o")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rx_byte")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rx_byte[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_byte";
}

SIGNAL("rx_byte[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_byte";
}

SIGNAL("rx_byte[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_byte";
}

SIGNAL("rx_byte[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_byte";
}

SIGNAL("rx_byte[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_byte";
}

SIGNAL("rx_byte[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_byte";
}

SIGNAL("rx_byte[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_byte";
}

SIGNAL("rx_byte[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_byte";
}

SIGNAL("rx_done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rxd_line")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("tx_byte")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("tx_byte[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_byte";
}

SIGNAL("tx_byte[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_byte";
}

SIGNAL("tx_byte[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_byte";
}

SIGNAL("tx_byte[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_byte";
}

SIGNAL("tx_byte[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_byte";
}

SIGNAL("tx_byte[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_byte";
}

SIGNAL("tx_byte[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_byte";
}

SIGNAL("tx_byte[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_byte";
}

SIGNAL("tx_done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("txd_line")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("write_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dma_busy_o")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("baudrate[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("baudrate[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("master_clk_i")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("mem_addr_o[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_addr_o[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_rd_i[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21120.0;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 27600.0;
	}
}

TRANSITION_LIST("mem_data_rd_i[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_rd_i[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_rd_i[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21120.0;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 27600.0;
	}
}

TRANSITION_LIST("mem_data_rd_i[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_rd_i[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21120.0;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 27600.0;
	}
}

TRANSITION_LIST("mem_data_rd_i[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_rd_i[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21120.0;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 27600.0;
	}
}

TRANSITION_LIST("mem_data_wr_o[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_wr_o[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_wr_o[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_wr_o[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_wr_o[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_wr_o[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_wr_o[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_data_wr_o[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_rw_done_i")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21760.0;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 26960.0;
	}
}

TRANSITION_LIST("mem_rw_req_o")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("mem_wr_en_o")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("reset_i")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 49680.0;
	}
}

TRANSITION_LIST("rx_byte[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("rx_byte[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("rx_byte[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("rx_byte[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("rx_byte[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("rx_byte[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("rx_byte[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("rx_byte[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("rx_done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("rxd_line")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50000.0;
	}
}

TRANSITION_LIST("tx_byte[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5440.0;
		LEVEL 0 FOR 22080.0;
		LEVEL 1 FOR 3840.0;
		LEVEL 0 FOR 18640.0;
	}
}

TRANSITION_LIST("tx_byte[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 9600.0;
		LEVEL 0 FOR 7680.0;
		LEVEL 1 FOR 7040.0;
		LEVEL 0 FOR 15440.0;
	}
}

TRANSITION_LIST("tx_byte[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5440.0;
		LEVEL 0 FOR 9600.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 11520.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 15440.0;
	}
}

TRANSITION_LIST("tx_byte[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5440.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 30160.0;
	}
}

TRANSITION_LIST("tx_byte[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31360.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 15440.0;
	}
}

TRANSITION_LIST("tx_byte[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 9600.0;
		LEVEL 0 FOR 11520.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 15440.0;
	}
}

TRANSITION_LIST("tx_byte[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5440.0;
		LEVEL 1 FOR 9600.0;
		LEVEL 0 FOR 12480.0;
		LEVEL 1 FOR 3840.0;
		LEVEL 0 FOR 18640.0;
	}
}

TRANSITION_LIST("tx_byte[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 19840.0;
		LEVEL 0 FOR 7680.0;
		LEVEL 1 FOR 7040.0;
		LEVEL 0 FOR 15440.0;
	}
}

TRANSITION_LIST("tx_done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("txd_line")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50000.0;
	}
}

TRANSITION_LIST("write_en")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 4160.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 4160.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 33360.0;
	}
}

TRANSITION_LIST("dma_busy_o")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "master_clk_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "baudrate[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_addr_o[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_rd_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
	CHILDREN = 47, 48, 49, 50, 51, 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_rd_i[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_rd_i[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_rd_i[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_rd_i[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_rd_i[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_rd_i[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_rd_i[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_rd_i[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_wr_o";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
	CHILDREN = 56, 57, 58, 59, 60, 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_wr_o[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_wr_o[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_wr_o[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_wr_o[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_wr_o[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_wr_o[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_wr_o[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "mem_data_wr_o[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "mem_rw_done_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "mem_rw_req_o";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "mem_wr_en_o";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rx_byte";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
	CHILDREN = 68, 69, 70, 71, 72, 73, 74, 75;
}

DISPLAY_LINE
{
	CHANNEL = "rx_byte[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "rx_byte[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "rx_byte[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "rx_byte[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "rx_byte[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "rx_byte[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "rx_byte[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "rx_byte[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "tx_byte";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 0;
	CHILDREN = 77, 78, 79, 80, 81, 82, 83, 84;
}

DISPLAY_LINE
{
	CHANNEL = "tx_byte[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "tx_byte[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "tx_byte[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "tx_byte[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "tx_byte[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "tx_byte[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "tx_byte[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "tx_byte[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "write_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rx_done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tx_done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rxd_line";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "txd_line";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dma_busy_o";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 90;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
